!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/harshal/dotfyles/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
["<C-CR>"]	lua/plugins/nvim-cmp.lua	/^				["<C-CR>"] = function(fallback)$/;"	f
["<C-h>"]	lua/plugins/nvim-cmp.lua	/^				["<C-h>"] = cmp.mapping(function()$/;"	f
["<C-l>"]	lua/plugins/nvim-cmp.lua	/^				["<C-l>"] = cmp.mapping(function()$/;"	f
__call	lua/utils/toggle.lua	/^		__call = function()$/;"	f
__call	lua/utils/toggle.lua	/^	__call = function(m, ...)$/;"	f
border	lua/plugins/nvim-cmp.lua	/^		local function border(hl_name)$/;"	f
bufremove	lua/utils/util.lua	/^function M.bufremove(buf)$/;"	f	unknown:M
build	lua/plugins/nvim-cmp.lua	/^			build = (function()$/;"	f
button	lua/plugins/start-page.lua	/^		local function button(sc, txt, keybind, keybind_opts)$/;"	f
callback	lua/config/autocmd.lua	/^		callback = function()$/;"	f
callback	lua/config/autocmd.lua	/^	callback = function()$/;"	f
callback	lua/plugins/bufferline.lua	/^			callback = function()$/;"	f
callback	lua/plugins/indent-blankline.lua	/^				callback = function()$/;"	f
callback	lua/plugins/lsp.lua	/^							callback = function(event2)$/;"	f
callback	lua/plugins/lsp.lua	/^				callback = function(event)$/;"	f
callback	lua/plugins/start-page.lua	/^				callback = function()$/;"	f
callback	lua/plugins/start-page.lua	/^			callback = function()$/;"	f
callback	lua/utils/toggle.lua	/^				callback = function()$/;"	f
close_command	lua/plugins/bufferline.lua	/^			close_command = function(n) Utils.bufremove(n) end,$/;"	f
cond	lua/plugins/telescope.lua	/^			cond = function()$/;"	f
config	lua/plugins/bufferline.lua	/^	config = function(_, opts)$/;"	f
config	lua/plugins/colorscheme.lua	/^		config = function()$/;"	f
config	lua/plugins/colorscheme.lua	/^		config = function(_, opts)$/;"	f
config	lua/plugins/indent-blankline.lua	/^		config = function(_, opts)$/;"	f
config	lua/plugins/lsp.lua	/^		config = function()$/;"	f
config	lua/plugins/mini.lua	/^	config = function()$/;"	f
config	lua/plugins/neo-tree.lua	/^			config = function()$/;"	f
config	lua/plugins/noice.lua	/^	config = function()$/;"	f
config	lua/plugins/none-ls.lua	/^	config = function()$/;"	f
config	lua/plugins/nvim-autopairs.lua	/^	config = function(_, opts)$/;"	f
config	lua/plugins/nvim-cmp.lua	/^				config = function()$/;"	f
config	lua/plugins/nvim-cmp.lua	/^			config = function()$/;"	f
config	lua/plugins/nvim-cmp.lua	/^			config = function(_, opts)$/;"	f
config	lua/plugins/nvim-cmp.lua	/^	config = function()$/;"	f
config	lua/plugins/nvim-lint.lua	/^	config = function(_, opts)$/;"	f
config	lua/plugins/nvim-lspimport.lua	/^	config = function(_, opts)$/;"	f
config	lua/plugins/nvim-surround.lua	/^	config = function()$/;"	f
config	lua/plugins/nvim-treesitter.lua	/^    config = function()$/;"	f
config	lua/plugins/start-page.lua	/^	config = function()$/;"	f
config	lua/plugins/telescope.lua	/^	config = function()$/;"	f
config	lua/plugins/venv-selector.lua	/^	config = function()$/;"	f
config	lua/plugins/which-key.lua	/^	config = function(_, opts) -- This is the function that runs, AFTER loading$/;"	f
debounce	lua/plugins/nvim-lint.lua	/^		function M.debounce(ms, fn)$/;"	f	unknown:M
desc	lua/utils/toggle.lua	/^			desc = function()$/;"	f
diagnostic_goto	lua/config/keymaps.lua	/^local diagnostic_goto = function(next, severity)$/;"	f
env	lua/plugins/none-ls.lua	/^				env = function(params)$/;"	f
expand	lua/plugins/nvim-cmp.lua	/^				expand = function(args)$/;"	f
fmt	lua/plugins/lualine.lua	/^						fmt = function(name, _)$/;"	f
footer	lua/plugins/start-page.lua	/^		local function footer()$/;"	f
format	lua/utils/toggle.lua	/^function M.format(buf)$/;"	f	unknown:M
format_on_save	lua/plugins/conform-autoformat.lua	/^		format_on_save = function(bufnr)$/;"	f
get	lua/utils/toggle.lua	/^		get = function()$/;"	f
get	lua/utils/toggle.lua	/^	get = function()$/;"	f
get_active_formatter	lua/plugins/lualine.lua	/^		local get_active_formatter = function()$/;"	f
get_active_lsp	lua/plugins/lualine.lua	/^		local get_active_lsp = function()$/;"	f
get_header	lua/utils/startpage-headers.lua	/^local function get_header(index, random)$/;"	f
icon	lua/utils/toggle.lua	/^			icon = function()$/;"	f
init	lua/plugins/indent-blankline.lua	/^		init = function()$/;"	f
init	lua/plugins/lualine.lua	/^	init = function()$/;"	f
lint	lua/plugins/nvim-lint.lua	/^		function M.lint()$/;"	f	unknown:M
map	lua/plugins/git-signs.lua	/^			local function map(mode, l, r, opts)$/;"	f
map	lua/plugins/lsp.lua	/^					local map = function(keys, func, desc)$/;"	f
map	lua/utils/toggle.lua	/^function M.map(lhs, toggle)$/;"	f	unknown:M
max_height	lua/plugins/noice.lua	/^				max_height = function()$/;"	f
max_width	lua/plugins/noice.lua	/^				max_width = function()$/;"	f
names	lua/plugins/nvim-lint.lua	/^			names = vim.tbl_filter(function(name)$/;"	f
on_attach	lua/plugins/git-signs.lua	/^		on_attach = function(bufnr)$/;"	f
on_attach	lua/plugins/lsp.lua	/^					server.on_attach = function(client, bufnr)$/;"	f	unknown:server
on_open	lua/plugins/noice.lua	/^				on_open = function(win)$/;"	f
option	lua/utils/toggle.lua	/^function M.option(option, opts)$/;"	f	unknown:M
opts	lua/config/keymaps.lua	/^local function opts(desc)$/;"	f
opts	lua/plugins/lualine.lua	/^	opts = function()$/;"	f
opts	lua/plugins/nvim-navic.lua	/^	opts = function()$/;"	f
right_mouse_command	lua/plugins/bufferline.lua	/^			right_mouse_command = function(n) Utils.bufremove(n) end,$/;"	f
safe_get	lua/utils/toggle.lua	/^	local function safe_get()$/;"	f
set	lua/utils/toggle.lua	/^			local function set(k, v)$/;"	f
set	lua/utils/toggle.lua	/^		set = function(state)$/;"	f
set	lua/utils/toggle.lua	/^	set = function(state)$/;"	f
shorter_name	lua/plugins/venv-selector.lua	/^		local function shorter_name(filename)$/;"	f
virtual_env	lua/plugins/lualine.lua	/^		local virtual_env = function()$/;"	f
wk	lua/utils/toggle.lua	/^function M.wk(lhs, toggle)$/;"	f	unknown:M
wrap	lua/utils/toggle.lua	/^function M.wrap(toggle)$/;"	f	unknown:M
